)
df %>%
knitr::kable()
# toy data
df <- tibble(
info = c(
"XYZ Deposit 2020",
"Cash Deposit",
"ATM",
"XYZ Fee 2021",
"XYZ Deposit 2021"
),
amount = seq(1,5) - 1
)
df
# str_detect() in action
df %>%
filter( # keeps
str_detect(info, "XYZ")
)
# str_detect() in action
df %>%
filter( # keeps
stringr::str_detect(info, "XYZ")
)
# str_detect() in action
df %>%
filter( # drops
!stringr::str_detect(
info, "XYZ"
)
)
reticulate::repl_python()
# toy data
df = pd.DataFrame({
'info':
[
"XYZ Deposit 2020",
"Cash Deposit",
"ATM",
"XYZ Fee 2021",
"XYZ Deposit 2021"
],
'amount': np.arange(5)
})
df
quit
reticulate::repl_python()
# str.contains in action: drop
df[~df['info'].str.contains("XYZ")]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(reticulate)
reticulate::repl_python()
import pandas as pd
import numpy as np
df = pd.DataFrame({
'name':["Barney", "Ted", "Marshall",
"Lilly", "Robin"],
'gender':["Male", "Male","Male",
"Female", "Female"],
'grade':[10, 11, 13, 12, 14]
})
df
quit
reticulate::repl_python()
# useful for multiple groups and stat
df.groupby(['gender']).agg(
{'grade': ['mean']}
)
quit
reticulate::repl_python()
# returns a data frame
reticulate::repl_python()
df[['gender', 'grade']].groupby("gender").mean()
quit
reticulate::repl_python()
# returns a data frame
df[['gender', 'grade']].groupby("gender").mean()
quit
reticulate::repl_python()
df.groupby("gender").agg(
{'grade': [
'mean', 'median',
'min', 'max'
]}
)
quit
df.groupby("gender").agg(
reticulate::repl_python()
# provide a dictionary
quit
reticulate::repl_python()
df.groupby("gender").agg(# provide a dictionary
# key: variable
# values: stats
{'grade': [
'mean', 'median',
'min', 'max'
]}
)
quit
reticulate::repl_python()
df.groupby("gender").agg(
# provide a dictionary
# key: variable
# values: stats
{'grade': [
'mean', 'median',
'min', 'max'
]}
)
quit
reticulate::repl_python()
df.groupby("gender").agg(
# provide a dictionary
#   key: variable
#   value: stats
{'grade':['mean', 'median','min', 'max']}
)
quit
reticulate::repl_python()
df.groupby("gender").agg(
# provide a dictionary
#   key: variable
#   value: stats
{'grade':['mean',
'median',
'min',
'max']}
)
quit
reticulate::repl_python()
# returns a data frame
df[['gender', 'grade']].groupby("gender").mean()
library(dplyr)
library(tidyr)
library(reticulate)
library(dplyr)
library(tidyr)
library(reticulate)
reticulate::repl_python()
import pandas as pd
import numpy as np
quit
reticulate::repl_python()
# toy data
df = pd.DataFrame({
'year': np.arange(2020,2025),
'Fall': np.linspace(10,15,5),
'Spring': np.linspace(1, 5,5)
})
df
quit
reticulate::repl_python()
# step 1: set year as index
df.set_index('year', inplace = True)
df
quit
reticulate::repl_python()
# toy data
df = pd.DataFrame({
'year': np.arange(2020,2025),
'Fall': np.linspace(10,15,5),
'Spring': np.linspace(1, 5,5)
})
df
quit
reticulate::repl_python()
# step 2: apply stack()
df_stacked = df.stack()
df_stacked
quit
reticulate::repl_python()
type(df_stacked)
quit
reticulate::repl_python()
type(df_stacked)
quit
reticulate::repl_python()
df_stacked.index
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
# toy data
year = [2010, 2010, 2010, 2020, 2020, 2020]
name = ["X", "Y", "Z", "X", "Y", "Z"]
gender = ["M", "F", "F", "M", "F", "F"]
grade = [10, 10, 20, 20, 12.5, 17.5]
df = pd.DataFrame(
{
'year': year,
'name': name,
'gender': gender,
'grade': grade
}
)
df
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
type(df_stat)
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
df_stat.index
quit
reticulate::repl_python()
df_stat.unstack()
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
df_stat.reset_index()
df_stat.reset_index
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
df_stat.reset_index()
reticulate::repl_python()
df_stat.reset_index()
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
df_stat.index
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
df_stat.reset_index()
quit
reticulate::repl_python()
# toy data
year = [2010, 2010, 2010, 2020, 2020, 2020]
name = ["X", "Y", "Z", "X", "Y", "Z"]
gender = ["M", "F", "F", "M", "F", "F"]
grade = [10, 10, 20, 20, 12.5, 17.5]
df = pd.DataFrame(
{
'year': year,
'name': name,
'gender': gender,
'grade': grade
}
)
df
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
df_stat.index
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
df_stat.reset_index()
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
df_stat.index
reticulate::repl_python()
df_stat.index
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
df_stat.reset_index()
quit
reticulate::repl_python()
df_stat.columns
quit
reticulate::repl_python()
df_stat.index.name = None
df_stat.columns.name = None
quit
reticulate::repl_python()
df_stat
quit
reticulate::repl_python()
df_stat = df_stat.unstack()
df_stat
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
df_stat.index
quit
reticulate::repl_python()
df_unstacked = df_stat.unstack()
df_unstacked
quit
reticulate::repl_python()
df_reset = df_unstacked.reset_index()
df_reset
quit
df_unstacked.index()
df_unstacked
reticulate::repl_python()
# toy data
year = [2010, 2010, 2010, 2020, 2020, 2020]
name = ["X", "Y", "Z", "X", "Y", "Z"]
gender = ["M", "F", "F", "M", "F", "F"]
grade = [10, 10, 20, 20, 12.5, 17.5]
df = pd.DataFrame(
{
'year': year,
'name': name,
'gender': gender,
'grade': grade
}
)
df
quit
# grouped by year and gender:
reticulate::repl_python()
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
df_unstacked = df_stat.unstack()
df_unstacked
quit
reticulate::repl_python()
df_unstacked.index()
quit
reticulate::repl_python()
df_unstacked.index()
quit
reticulate::repl_python()
df_unstacked.index
quit
reticulate::repl_python()
df_unstacked.reset_index()
quit
reticulate::repl_python()
df_reset = df_unstacked.reset_index()
df_reset
quit
reticulate::repl_python()
df_reset.index.name = None
df_reset.columns.name = None
quit
reticulate::repl_python()
df_reset.index.name = None
df_reset.columns.name = None
quit
reticulate::repl_python()
df_reset
quit
reticulate::repl_python()
# toy data
year = [2010, 2010, 2010, 2020, 2020, 2020]
name = ["X", "Y", "Z", "X", "Y", "Z"]
gender = ["M", "F", "F", "M", "F", "F"]
grade = [10, 10, 20, 20, 12.5, 17.5]
df = pd.DataFrame(
{
'year': year,
'name': name,
'gender': gender,
'grade': grade
}
)
df
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
df_unstacked = df_stat.unstack()
df_unstacked
quit
reticulate::repl_python()
df_reset = df_unstacked.reset_index()
df_reset
quit
reticulate::repl_python()
df_reset.index.name = None
df_reset.columns.name = None
quit
reticulate::repl_python()
df_reset
quit
reticulate::repl_python()
df_reset.columns = ['year', 'M', 'F']
quit
reticulate::repl_python()
df_reset
quit
reticulate::repl_python()
# toy data
year = [2010, 2010, 2010, 2020, 2020, 2020]
name = ["X", "Y", "Z", "X", "Y", "Z"]
gender = ["M", "F", "F", "M", "F", "F"]
grade = [10, 10, 20, 20, 12.5, 17.5]
df = pd.DataFrame(
{
'year': year,
'name': name,
'gender': gender,
'grade': grade
}
)
df
quit
reticulate::repl_python()
# grouped by year and gender:
# find mean grade
df_stat = df.groupby(
['year', 'gender']
).agg({
'grade': ['mean']
})
df_stat
quit
reticulate::repl_python()
df_unstacked = df_stat.unstack()
df_unstacked
quit
reticulate::repl_python()
df_unstacked.columns = ['year', 'M', 'F']
quit
reticulate::repl_python()
df_unstacked
quit
reticulate::repl_python()
# To change the names
df_reset = df_unstacked.reset_index()
df_reset
quit
reticulate::repl_python()
df_reset.columns = ['year', 'M', 'F']
quit
df_reset
reticulate::repl_python()
df_reset
