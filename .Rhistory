glimpse(df)
reticulate::repl_python()
df.shape
quit
reticulate::repl_python()
df.shape
df.info
quit
reticulate::repl_python()
df.shape
df.info()
quit
reticulate::repl_python()
df.info()
quit
knitr::kable(df)
reticulate::repl_python()
df[['name', 'grade']]
quit
reticulate::repl_python()
df[['name', 'grade']]
# or
df.drop(['gender'])
quit
reticulate::repl_python()
df[['name', 'grade']]
# or
df.drop(['gender'])
quit
reticulate::repl_python()
# or
df.drop(['gender'])
quit
# or
reticulate::repl_python()
df.drop(['gender'])
quit
reticulate::repl_python()
# or
df
quit
reticulate::repl_python()
# or
df.drop(['grade'])
quit
reticulate::repl_python()
# or
df.drop(['grade'])
quit
reticulate::repl_python()
# or
df.drop(['grade'])
quit
reticulate::repl_python()
# or
df.drop(['grade'])
df
quit
reticulate::repl_python()
# or
df.drop(columns = ['grade'])
quit
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
reticulate::repl_python()
df = pd.DataFrame({
'name':["Barney", "Ted", "Marshall",
"Lilly", "Robin"],
'gender':["Male", "Male","Male",
"Female", "Female"],
'grade':[10, 11, 13, 12, 14]
})
df
quit
reticulate::repl_python()
import pandas as pd
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
reticulate::repl_python()
import pandas as pd
quit
quit
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
reticulate::repl_python()
df = pd.DataFrame({
'name':["Barney", "Ted", "Marshall",
"Lilly", "Robin"],
'gender':["Male", "Male","Male",
"Female", "Female"],
'grade':[10, 11, 13, 12, 14]
})
df
quit
reticulate::repl_python()
df.groupby("gender")['grade'].mean()
quit
reticulate::repl_python()
df.groupby("gender")['grade'].mean()
quit
reticulate::repl_python()
df[['gender', 'grade']].groupby("gender").mean()
quit
reticulate::repl_python()
type(df.groupby("gender")['grade'].mean())
quit
reticulate::repl_python()
df.groupby("gender")['grade'].mean()
quit
reticulate::repl_python()
type(df[['gender', 'grade']].groupby("gender").mean())
quit
reticulate::repl_python()
df[['gender', 'grade']].groupby("gender").mean()
quit
reticulate::repl_python()
df[['gender', 'grade']].groupby("gender").mean()
quit
df %>%
group_by(gender) %>%
summarize(mean = mean(grade),
median = median(grade),
min = min(grade),
max = max(grade))
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{
'mean': 'mean'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'mean',
'median_grade': 'median',
'min_grade': 'min'
'median_grade': 'max'
}
)
quit
df.groupby("gender")['grade'].agg(
reticulate::repl_python()
# provide a dictionary
quit
df.groupby("gender")['grade'].agg(
reticulate::repl_python()
# provide a dictionary
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'mean',
'median_grade': 'median',
'min_grade': 'min',
'median_grade': 'max'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'mean',
'median_grade': 'median'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'mean',
'median_grade': 'median'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'min'
}
)
quit
df.groupby("gender")['grade'].agg(
reticulate::repl_python()
# provide a dictionary
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'min'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean_grade': 'min',
'median_grade': 'median',
'min_grade': 'min',
'median_grade': 'max'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean': 'min',
'median': 'median',
'min': 'min',
'median': 'max'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean': 'max',
'median': 'median',
'min': 'min',
'median': 'max'
}
)
quit
reticulate::repl_python()
df.groupby("gender")['grade'].agg(
# provide a dictionary
{# variable name followed by function
'mean': 'mean',
'median': 'median',
'min': 'min',
'max': 'max'
}
)
quit
reticulate::repl_python()
df[['gender', 'grade']].groupby("gender").agg(
# provide a dictionary
{# variable name followed by function
'mean': 'mean',
'median': 'median',
'min': 'min',
'max': 'max'
}
)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
df %>%
arrange(grade)
library(dplyr)
reticulate::repl_python()
import pandas as pd
quit
quit
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
reticulate::repl_python()
df = pd.DataFrame({
'name':["Barney", "Ted", "Marshall",
"Lilly", "Robin"],
'gender':["Male", "Male","Male",
"Female", "Female"],
'grade':[10, 11, 13, 12, 14]
})
df
quit
quit
df %>%
arrange(grade)
reticulate::repl_python()
# returns a series
df[['grade']].sort_values()
quit
reticulate::repl_python()
# returns a series
df[['grade']].sort_values()
quit
reticulate::repl_python()
# returns a series
df.sort_values('grade')
quit
df.sort_values('grade')
reticulate::repl_python()
df.sort_values('grade')
quit
df %>%
arrange(desc(grade))
reticulate::repl_python()
df.sort_values('grade', ascending = False)
quit
reticulate::repl_python()
df.sort_values(['gender','grade'],
ascending = [False, True])
nchar(y)
y <- c("Hello", "World", "Hello", "Universe")
nchar(y)
tolower(y)
toupper(y)
y
chartr("H", "*", y)
chartr("H", "*", y) # replaces H with *
chartr("oe", "$#", y)#o becomes $; e becomes #
x <- "Hello World"
chartr(x, 1, 9)
x <- "Hello World"
chartr(x, 2, 9)
x <- "Hello World"
chartr(x, 2, 9)
x <- "Hello World"
chartr(x, 2, 9)
x <- "Hello World"
substr(x, 2, 9)
substr(y, 2, 9)
substr(y, 2, 5)
substr(y, 2, 5)
substr(y, 2, 5)
y
x <- "Have you met?"
substr(x, 2, 6)
x <- "Have you met?"
substr(x, 2, 6) # provides strings from 2 to 6
x <- "1t345s?"
substr(x, 2, 6) # provides strings from 2 to 6
x <- "RoRockso!"
strsplit(x, split = "o")
x <- "RkRkocksk!"
strsplit(x, split = "o")
x <- "RkRkocksk!"
strsplit(x, split = "o")
x <- "RkRocsk!"
strsplit(x, split = "o")
x <- "RkRocsk!"
strsplit(x, split = "k")
x <- "RmRocksm!"
strsplit(x, split = "m")
tolower(y)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
reticulate::repl_python()
import pandas as pd
quit
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
df <- tibble(
name = c("Barney", "Ted", "Marshall",
"Lilly","Robin"),
gender = c("Male", "Male","Male",
"Female", "Female"),
grade = c(10, 11, 13, 12, 14)
)
df
reticulate::repl_python()
df = pd.DataFrame({
'name':["Barney", "Ted", "Marshall",
"Lilly", "Robin"],
'gender':["Male", "Male","Male",
"Female", "Female"],
'grade':[10, 11, 13, 12, 14]
})
df
quit
df %>%
filter(name == "Barney"| gender == "Female")
reticulate::repl_python()
# similar to base R
df[(df["name"] == "Barney") |
(df["gender"] == "Female")]
quit
reticulate::repl_python()
# query
df.query(name == "Barney"| gender == "Female")
quit
reticulate::repl_python()
# query
df.query(name == "Barney"| gender == "Female")
quit
reticulate::repl_python()
# query
df.query('name == "Barney"| gender == "Female"')
quit
reticulate::repl_python()
# query
df.query("name == "Barney"| gender == "Female"")
quit
# query
reticulate::repl_python()
df.query("name == "Barney"| gender == "Female"")
quit
reticulate::repl_python()
# query
df.query('name == "Barney"| gender == "Female"')
quit
reticulate::repl_python()
# query
df.query("name == 'Barney'| gender == 'Female'")
quit
reticulate::repl_python()
# query with ''; need to use "" for conditions
df.query('name == "Barney"|
gender == "Female"')
quit
reticulate::repl_python()
# query with ''; need to use "" for conditions
df.query('name == "Barney"|
gender == "Female"')
quit
reticulate::repl_python()
# query with ''; need to use "" for conditions
df.query('name == "Barney"|
gender == "Female"')
quit
reticulate::repl_python()
# query with ''; need to use "" for conditions
df.query('name == "Barney"|
gender == "Female"')
quit
reticulate::repl_python()
# query with ''; need to use "" for conditions
df.query('name == "Barney"|gender == "Female"')
quit
reticulate::repl_python()
# query with ""; need to use '' for conditions
df.query("name == 'Barney'| gender == 'Female'")
quit
df %>%
filter(name == "Barney"|
gender == "Female")
library(magrittr)
readr::read_csv("data/sql/Employees.csv") %>%
knitr::kable()
View(df)
readr::read_csv("data/sql/db2-employees.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(magrittr)
readr::read_csv("data/sql/db2-employees.csv") %>%
knitr::kable()
library(dplyr)
readr::read_csv("data/sql/db2-employees.csv") %>%
select(1:5)
knitr::kable()
library(dplyr)
readr::read_csv("data/sql/db2-employees.csv") %>%
select(1:5) %>%
knitr::kable()
readr::read_csv("data/sql/db2-employees.csv") %>%
select(1,6:10)
knitr::kable()
readr::read_csv("data/sql/db2-employees.csv") %>%
select(1,6:10) %>%
knitr::kable()
readr::read_csv("data/sql/db2-employees.csv") %>%
select(6:ncol()) %>%
knitr::kable()
readr::read_csv("data/sql/db2-employees.csv")
readr::read_csv("data/sql/db2-departments.csv") %>%
select(6:11) %>%
knitr::kable()
library(dplyr)
readr::read_csv("data/sql/db2-employees.csv") %>%
select(1:5) %>%
knitr::kable()
readr::read_csv("data/sql/db2-departments.csv")
readr::read_csv("data/sql/db2-departments.csv") %>%
knitr::kable()
