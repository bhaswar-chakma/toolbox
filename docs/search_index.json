[["join-and-bind.html", "3 Join and Bind 3.1 Join Data Frames: *_join vs merge() 3.2 Bind Rows: bind_rows() vs append()", " 3 Join and Bind 3.1 Join Data Frames: *_join vs merge() Toy Data df1: id first_name hiRS Robin hiTM Ted bbP Penny bbSC Sheldon df2: id last_name hiRS Robin hiTM Ted bbSC Cooper bbLH Hofstadter R Python # toy data df1 = tibble( &#39;id&#39;= c(&quot;hiRS&quot;, &quot;hiTM&quot;, &quot;bbP&quot;, &quot;bbSC&quot;), &#39;first_name&#39;= c( &#39;Robin&#39;, &#39;Ted&#39;, &#39;Penny&#39;, &#39;Sheldon&#39; ) ) df2 = tibble( &#39;id&#39;= c(&quot;hiRS&quot;, &quot;hiTM&quot;, &quot;bbSC&quot;, &quot;bbLH&quot;), &#39;last_name&#39;= c( &#39;Robin&#39;, &#39;Ted&#39;, &#39;Cooper&#39;, &#39;Hofstadter&#39; ) ) # toy data df1 = pd.DataFrame({ &#39;id&#39;: [&quot;hiRS&quot;, &quot;hiTM&quot;, &quot;bbP&quot;, &quot;bbSC&quot;], &#39;first_name&#39;:[ &#39;Robin&#39;, &#39;Ted&#39;, &#39;Penny&#39;, &#39;Sheldon&#39; ] }) df2 = pd.DataFrame({ &#39;id&#39;: [&quot;hiRS&quot;, &quot;hiTM&quot;, &quot;bbSC&quot;, &quot;bbLH&quot;], &#39;last_name&#39;:[ &#39;Scherbatsky&#39;, &#39;Mosby&#39;, &#39;Cooper&#39;, &#39;Hofstadter&#39; ] }) 3.1.1 Inner Join dplyr::inner_join() pandas::merge(how = inner) # inner_join in action # note: by argument is not needed here df1 %&gt;% inner_join(df2, by = &quot;id&quot;) ## # A tibble: 3 x 3 ## id first_name last_name ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 hiRS Robin Robin ## 2 hiTM Ted Ted ## 3 bbSC Sheldon Cooper # merge(how = &quot;inner&quot;) in action df1.merge(df2, how = &#39;inner&#39;, on = &#39;id&#39;) # note: default is inner join # i.e. df1.merge(df2) does inner join ## id first_name last_name ## 0 hiRS Robin Scherbatsky ## 1 hiTM Ted Mosby ## 2 bbSC Sheldon Cooper 3.1.2 Left Join dplyr::inner_join() pandas::merge(how = left) # left_join in action # note: by argument is not needed here # needed when you have more keys df1 %&gt;% left_join(df2, by = &quot;id&quot;) ## # A tibble: 4 x 3 ## id first_name last_name ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 hiRS Robin Robin ## 2 hiTM Ted Ted ## 3 bbP Penny &lt;NA&gt; ## 4 bbSC Sheldon Cooper # merge(how = &quot;left&quot;) in action df1.merge(df2, how = &#39;left&#39;, on = &#39;id&#39;) ## id first_name last_name ## 0 hiRS Robin Scherbatsky ## 1 hiTM Ted Mosby ## 2 bbP Penny NaN ## 3 bbSC Sheldon Cooper 3.1.3 Right Join dplyr::right_join() pandas::merge(how = right) # left_join in action # note: by argument is not needed here # needed when you have more keys df1 %&gt;% right_join(df2, by = &quot;id&quot;) ## # A tibble: 4 x 3 ## id first_name last_name ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 hiRS Robin Robin ## 2 hiTM Ted Ted ## 3 bbSC Sheldon Cooper ## 4 bbLH &lt;NA&gt; Hofstadter # merge(how = &quot;right&quot;) in action df1.merge(df2, how = &#39;right&#39;, on = &#39;id&#39;) ## id first_name last_name ## 0 hiRS Robin Scherbatsky ## 1 hiTM Ted Mosby ## 2 bbSC Sheldon Cooper ## 3 bbLH NaN Hofstadter 3.1.4 Full Join dplyr::full_join() pandas::merge(how = outer) # full_join in action # note: by argument is not needed here # needed when you have more keys df1 %&gt;% full_join(df2, by = &quot;id&quot;) ## # A tibble: 5 x 3 ## id first_name last_name ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 hiRS Robin Robin ## 2 hiTM Ted Ted ## 3 bbP Penny &lt;NA&gt; ## 4 bbSC Sheldon Cooper ## 5 bbLH &lt;NA&gt; Hofstadter # merge(how = &quot;outer&quot;) in action df1.merge(df2, how = &#39;outer&#39;, on = &#39;id&#39;) ## id first_name last_name ## 0 hiRS Robin Scherbatsky ## 1 hiTM Ted Mosby ## 2 bbP Penny NaN ## 3 bbSC Sheldon Cooper ## 4 bbLH NaN Hofstadter 3.2 Bind Rows: bind_rows() vs append() df1: first_name last_name Steve Vai Joe Satriani df2: first_name last_name Paul Gilbert Eric Johnson How do we combine the rows of df1 and df2? dplyr::bind_rows() pandas::append() # toy data df1 &lt;- tibble( first_name = c(&#39;Steve&#39;, &#39;Joe&#39;), last_name = c(&#39;Vai&#39;, &#39;Satriani&#39;) ) df2 &lt;- tibble( first_name = c(&#39;Paul&#39;, &#39;Eric&#39;), last_name = c(&#39;Gilbert&#39;, &#39;Johnson&#39;) ) # bind_rows() in action bind_rows(df1, df2) ## # A tibble: 4 x 2 ## first_name last_name ## &lt;chr&gt; &lt;chr&gt; ## 1 Steve Vai ## 2 Joe Satriani ## 3 Paul Gilbert ## 4 Eric Johnson # toy data df1 = pd.DataFrame({ &#39;first_name&#39;: [&#39;Steve&#39;, &#39;Joe&#39;], &#39;last_name&#39;: [&#39;Vai&#39;, &#39;Satriani&#39;] }) df2 = pd.DataFrame({ &#39;first_name&#39;: [&#39;Paul&#39;, &#39;Eric&#39;], &#39;last_name&#39;: [&#39;Gilbert&#39;, &#39;Johnson&#39;] }) # append in action: ignoring the index df1.append(df2, ignore_index = True) ## first_name last_name ## 0 Steve Vai ## 1 Joe Satriani ## 2 Paul Gilbert ## 3 Eric Johnson # append in action: maintaining the index df1.append(df2) ## first_name last_name ## 0 Steve Vai ## 1 Joe Satriani ## 0 Paul Gilbert ## 1 Eric Johnson "]]
